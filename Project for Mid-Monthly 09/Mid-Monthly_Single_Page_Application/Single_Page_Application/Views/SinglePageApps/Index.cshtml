@model DataViewModel
@{
    ViewData["Title"] = "Index";
}
<h1 style="text-align:center">Book Seller Application</h1>
<hr />
<div class="row m-1">
    <div class="col-4 border-end">
        <h3 style="text-align:center;background-color:lightgreen">Authors</h3>
        <div class="d-flex justify-content-end mb-1">
            <button class="btn btn-primary btn-sm" id="addauthor"><span class="bi bi-plus"></span> Add</button>
        </div>
        @await Html.PartialAsync("_AuthorTable", Model.Authors)
    </div>
    <div class="col-4 border-end">
        <h3 style="text-align:center;background-color:lightgreen">Genres</h3>
        <div class="d-flex justify-content-end mb-1">
            <button class="btn btn-primary btn-sm" id="addgen"><span class="bi bi-plus"></span> Add</button>
        </div>
        @await Html.PartialAsync("_GenreTable", Model.Genres)
    </div>
    <div class="col-4">
        <h3 style="text-align:center;background-color:lightgreen">Publishers</h3>
        <div class="d-flex justify-content-end mb-1">
            <button class="btn btn-primary btn-sm" id="addpub"><span class="bi bi-plus"></span> Add</button>
        </div>
        @await Html.PartialAsync("_PublisherTable", Model.Publishers)
    </div>
</div>

<div class="row">
    <div class="col-12">
        <h3 style="text-align:center;background-color:lightskyblue;">Books</h3>
        <div class="d-flex justify-content-end mb-1">
            <button class="btn btn-primary btn-sm" id="addbook"><span class="bi bi-plus"></span> Add</button>
        </div>
        @await Html.PartialAsync("_BookTable", Model.Books)
    </div>
</div>
<h2 style="text-align:center">Master Details Work Here</h2>
<hr />
<div class="row">

    <div class="col-6">
        <h3 style="text-align:center;background-color:lightblue">Customers</h3>
        <div class="d-flex justify-content-end mb-1">
            <ul style="padding-right:220px;"><li>Clicking Select,Customer edit is not applicable</li><li>Click Select to Work on Sale Details</li></ul>
            <button class="btn btn-primary btn-sm my-3" id="addcust"><span class="bi bi-plus"></span> Add</button>
        </div>
        @await Html.PartialAsync("_CustomerTable", Model.Customers, new ViewDataDictionary(this.ViewData) { { "id", Model.SelectedOrderId } })
    </div>
    <div class="col-6">
        <h3 style="text-align:center;background-color:lightblue;">Sale Details</h3>
        
        <div class="d-flex justify-content-end mb-1">
            <ul style="padding-right:220px;"><li>Inserting Same Book is Not Applicable</li></ul>
            <button class="btn btn-primary btn-sm my-3" id="addsd"><span class="bi bi-plus"></span> Add</button>
        </div>
        <div id="sddiv">
            @await Html.PartialAsync("_SaleDetailsTable", Model.SaleDetails)
        </div>
    </div>
</div>
<!--Modal-->
<div class="modal" tabindex="-1" id="modal">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header bg-primary text-white">
                <h5 class="modal-title" id="mtitle"></h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body" id="mbody">
                <p>Modal body text goes here.</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                <button type="button" id="save" class="btn btn-primary" form="f">Save changes</button>
            </div>
        </div>
    </div>
</div>
<div class="modal" tabindex="-1" id="delModal">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header bg-warning text-white">
                <h5 class="modal-title">Confirm</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p>Are you sure to delete this item?</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-danger" id="deleteItem">Delete</button>
            </div>
        </div>
    </div>
</div>
<!--Toast-->
<div class="position-absolute bottom-0 end-0 p-3" style="z-index: 11">
    <div id="toastNotice" class="toast hide" role="alert" aria-live="assertive" aria-atomic="true">
        <div class="toast-header">
            <strong class="me-auto" id="toasthead">Bootstrap</strong>

            <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>
        </div>
        <div class="toast-body" id="toastbody">
            Hello, world! This is a toast message.
        </div>
    </div>
</div>
@section styles
    {
    <link rel="stylesheet" href="~/libs/picker/css/bootstrap-datepicker.standalone.css" />
}
    @section scripts {
    @await Html.PartialAsync("_ValidationScriptsPartial")
    <script src="~/libs/picker/js/bootstrap-datepicker.js"></script>
    <script>
        var myModal = new bootstrap.Modal(document.getElementById('modal'));
        var delModal = new bootstrap.Modal(document.getElementById('delModal'));
        var myAlert = document.getElementById('toastNotice');//select id of toast
        var bsAlert = new bootstrap.Toast(myAlert);//inizialize it
        var itemToWorkWith;
        $(() => {
            $(".date").datepicker();
            //Order select start
            $(() => {
                $(document).on("click", "button.select", function() {
                    var customerId = $(this).data("customer-id");
                    console.log(customerId)
                    var previousSelected = $("tr.bg-info")
                    previousSelected.removeClass("bg-info");
                    previousSelected.find("button.btn").removeClass("disabled");
                    //$(this).parent().parent().addClass("bg-info");
                    $(this).closest("tr").addClass("bg-info");
                    $(this).closest("tr").find("button.btn").addClass("disabled");
                    $.ajax({
                        type: "POST",
                        url: "/SinglePageApps/GetSelectedSaleDetails/" + customerId,
                        success: r => {
                            $("#sddiv").html(r);
                        }
                    })
                });
                //Add Customer start
                $("#addauthor").click(() => {
                    $.ajax({
                        type: "GET",
                        url: "@Url.Action("CreateAuthor", "SinglePageApps")",
                        success: r => {
                            $("#mbody").html(r);
                            $("#mtitle").html("Add Author");

                            myModal.show();
                            var f = $("#f");
                            console.log(f);
                            //f.removeData('validator');

                            // f.removeData('unobtrusiveValidation');
                            $.validator.unobtrusive.parse(f);

                        }

                    });

                });
                //Add Customer end

                //Add Genre start
                $("#addgen").click(() => {
                    $.ajax({
                        type: "GET",
                        url: "@Url.Action("CreateGenre", "SinglePageApps")",
                        success: r => {
                            $("#mbody").html(r);
                            $("#mtitle").html("Add Genre");

                            myModal.show();
                            var f = $("#f");
                            console.log(f);
                            //f.removeData('validator');

                            // f.removeData('unobtrusiveValidation');
                            $.validator.unobtrusive.parse(f);

                        }

                    });

                });
                //Add Genre end
                //Add Publisher start
                $("#addpub").click(() => {
                    $.ajax({
                        type: "GET",
                        url: "@Url.Action("CreatePublisher", "SinglePageApps")",
                        success: r => {
                            $("#mbody").html(r);
                            $("#mtitle").html("Add Publisher");

                            myModal.show();
                            var f = $("#f");
                            console.log(f);
                            //f.removeData('validator');

                            // f.removeData('unobtrusiveValidation');
                            $.validator.unobtrusive.parse(f);

                        }

                    });

                });
                //Add Publisher end here
                //Add book start
                $("#addbook").click(() => {
                    $.ajax({
                        type: "GET",
                        url: "@Url.Action("CreateBook", "SinglePageApps")",
                        success: r => {
                            $("#mbody").html(r);
                            $("#mtitle").html("Add Book");

                            myModal.show();
                            var f = $("#f");
                            console.log(f);
                            //f.removeData('validator');

                            // f.removeData('unobtrusiveValidation');
                            $.validator.unobtrusive.parse(f);
                            $(".date").datepicker({
                            format:'yyyy-mm-dd'
                        });
                        }

                    });


                    //toast.show();
                });
                //Add book end
                //Add Customer start
                $("#addcust").click(() => {
                    $.ajax({
                        type: "GET",
                        url: "@Url.Action("CreateCustomer", "SinglePageApps")",
                        success: r => {
                            $("#mbody").html(r);
                            $("#mtitle").html("Add Customer");

                            myModal.show();
                            var f = $("#f");
                            console.log(f);
                            //f.removeData('validator');

                            // f.removeData('unobtrusiveValidation');
                            $.validator.unobtrusive.parse(f);

                        }

                    });
                });
                //Add Customer end
                $("#addsd").click(function () {
                var id = $('button.select.disabled').data("customer-id")
                $.ajax({
                    type: "GET",
                    url: "/SinglePageApps/CreateSaleDetails/" + id,
                    success: r => {
                        $("#mbody").html(r);
                        $("#mtitle").html("Add Order Item");

                        myModal.show();
                        var f = $("#f");
                        console.log(f);
                        //f.removeData('validator');
                        // f.removeData('unobtrusiveValidation');
                        $.validator.unobtrusive.parse(f);
                    }

                });
            })
                //delete order item on insert start
                $(document).on("click", "button.deloi-insert", function() {
                    if ($("button.deloi-insert").length < 2) return;
                    $(this).parent().parent().remove();
                })
                //delete order item on insert end
                //Edit action start
                $(document).on('click', 'button.edit', function() {
                    var dbType = $(this).data("db-type");
                    var dbAction = $(this).data("db-action");
                    var controllerAction = $(this).data("controller-action");
                    var id = $(this).data(`${dbType}-id`);
                    //console.log(`${dbType} ${dbAction} ${controllerAction}`);
                    //console.log(id);
                    $.ajax({
                        type: "GET",
                        url: `/SinglePageApps/${controllerAction}/${id}`,
                        success: r => {
                            $("#mbody").html(r);
                            $("#mtitle").html("Edit");

                            myModal.show();
                            var f = $("#f");
                            console.log(f);
                            //f.removeData('validator');

                            // f.removeData('unobtrusiveValidation');
                            $.validator.unobtrusive.parse(f);
                            $(".date").datepicker({
                            format:'yyyy-mm-dd'
                        });

                        }

                    });
                });

                //Edit action end

                //Delete item start
            $(document).on('click', 'button.del', function () {
                itemToWorkWith = $(this);
                delModal.show();
                console.log(itemToWorkWith);
                //console.log(`${dbType} ${dbAction} ${controllerAction}`);
                //console.log(id);

            });
            $('#deleteItem').click(() => {
                delModal.hide();
                var dbType = itemToWorkWith.data("db-type");
                var dbAction = itemToWorkWith.data("db-action");
                var controllerAction = itemToWorkWith.data("controller-action");
                var id = itemToWorkWith.data(`${dbType}-id`);
                console.log(`${dbType} ${dbAction} ${controllerAction}`);
                console.log(id);
                console.log($(`#${dbType}_tr_${id}`))
                $(`#${dbType}_tr_${id}`).remove();
                if(dbType == 'saledetails'){
                    var oid = itemToWorkWith.data("customer-id");
                    var pid = itemToWorkWith.data("book-id");
                    $.ajax({
                        type: 'POST',
                        url: `/SinglePageApps/${controllerAction}/?oid=${oid}&pid=${pid}`,
                        //data:{oid:oid, pid:pid},
                        success: r => {
                            if (r.success == true) {
                                $("#toasthead").html("Success");
                                $("#toastbody").html(r.message);

                                bsAlert.show();
                                $(`#${dbType}_tr_${oid}_${pid}`).remove();
                            }
                            else {
                                $("#toasthead").html("Failed");
                                $("#toastbody").html(r.message);

                                bsAlert.show();
                            }
                        }
                    });
                }
                else
                {
                    $.ajax({
                        type: 'POST',
                        url: `/SinglePageApps/${controllerAction}/${id}`,
                        success: r => {
                            if (r.success == true) {
                                $("#toasthead").html("Success");
                                $("#toastbody").html(r.message);

                                bsAlert.show();
                                $(`#${dbType}_tr_${id}`).remove();
                            }
                            else {
                                $("#toasthead").html("Failed");
                                $("#toastbody").html(r.message);

                                bsAlert.show();
                            }
                        }
                    });
                }
            });
            //Delete item end

                //Save click start
                $("#save").click(function() {
                    var button = $(this);
                    var isValid = $("#f").valid();
                    //console.log(isValid);
                    if (isValid == true) {
                        var dbType = $("#f").data("db-type");
                        var dbAction = $("#f").data("db-action");
                        var controllerAction = $("#f").data("controller-action");
                        //console.log(`${dbType} ${dbAction} ${controllerAction}`);
                        var data = createData(dbType, dbAction);
                        console.log(data);
                        //author save
                        if (dbType == "author") {

                            $.ajax({
                                url: `/SinglePageApps/${controllerAction}`,
                                type: "POST",
                                data: data,
                                dataType: "json",
                                success: r => {
                                    if (dbAction == "insert") {
                                        $("#toasthead").html("Success");
                                        $("#toastbody").html("Data inserted successfully");
                                        myModal.hide();
                                        bsAlert.show();
                                        addToTable(dbType, r);



                                    }
                                    if (dbAction == "edit") {
                                        $("#toasthead").html("Success");
                                        $("#toastbody").html("Data saved successfully");
                                        myModal.hide();
                                        bsAlert.show();


                                        replaceRow(dbType, `author_tr_${r.authorID}`, r);

                                    }
                                },
                                error: function(err) {
                                    alert(err.statusText);
                                    $("#toasthead").html("Failed");
                                    $("#toastbody").html("Failed to insert data");

                                    bsAlert.show();
                                }
                            });
                        }
                        //genre save
                        if (dbType == "genre") {

                            $.ajax({
                                url: `/SinglePageApps/${controllerAction}`,
                                type: "POST",
                                data: data,
                                dataType: "json",
                                success: r => {
                                    if (dbAction == "insert") {
                                        $("#toasthead").html("Success");
                                        $("#toastbody").html("Data inserted successfully");
                                        myModal.hide();
                                        bsAlert.show();
                                        addToTable(dbType, r);



                                    }
                                    if (dbAction == "edit") {
                                        $("#toasthead").html("Success");
                                        $("#toastbody").html("Data saved successfully");
                                        myModal.hide();
                                        bsAlert.show();


                                        replaceRow(dbType, `genre_tr_${r.genreID}`, r);

                                    }
                                },
                                error: function(err) {
                                    alert(err.statusText);
                                    $("#toasthead").html("Failed");
                                    $("#toastbody").html("Failed to insert data");

                                    bsAlert.show();
                                }
                            });
                        }
                        //publisher save
                        if (dbType == "publisher") {

                            $.ajax({
                                url: `/SinglePageApps/${controllerAction}`,
                                type: "POST",
                                data: data,
                                dataType: "json",
                                success: r => {
                                    if (dbAction == "insert") {
                                        $("#toasthead").html("Success");
                                        $("#toastbody").html("Data inserted successfully");
                                        myModal.hide();
                                        bsAlert.show();
                                        addToTable(dbType, r);



                                    }
                                    if (dbAction == "edit") {
                                        $("#toasthead").html("Success");
                                        $("#toastbody").html("Data saved successfully");
                                        myModal.hide();
                                        bsAlert.show();


                                        replaceRow(dbType, `publisher_tr_${r.publisherID}`, r);

                                    }
                                },
                                error: function(err) {
                                    alert(err.statusText);
                                    $("#toasthead").html("Failed");
                                    $("#toastbody").html("Failed to insert data");

                                    bsAlert.show();
                                }
                            });
                        }
                        //book save here
                        if (dbType == "book") {
                            $.ajax({
                                url: `/SinglePageApps/${controllerAction}`,
                                type: "POST",
                                contentType: false, // Not to set any content header
                                processData: false, // Not to process data
                                data: data,
                                success: function(result) {
                                    console.log(result);
                                    if (dbAction == "insert") {
                                        $("#toastheader").html("Success");
                                        $("#toastbody").html("Data inserted successfully");
                                        bsAlert.show();
                                        if (dbAction == 'insert') addToTable(dbType, result);

                                    }
                                    if (dbAction == "edit") {
                                        $("#toasthead").html("Success");
                                        $("#toastbody").html("Data saved successfully");
                                        myModal.hide();
                                        bsAlert.show();
                                        replaceRow(dbType, `book_tr_${result.bookID}`, result);

                                    }
                                    myModal.hide();
                                    myModal.hide();
                                },
                                error: function(err) {
                                    alert(err.statusText);
                                    $("#toasthead").html("Failed");
                                    $("#toastbody").html("Failed to insert data");
                                    bsAlert.show();
                                }
                            });
                        }
                        //save customer here
                        if (dbType == "customer") {
                            var isValid = $("#f").valid();
                            if (isValid == true) {
                                var dbType = $("#f").data("db-type");
                                var dbAction = $("#f").data("db-action");
                                var controllerAction = $("#f").data("controller-action");
                                console.log(`${dbType} ${dbAction} ${controllerAction}`);
                                var data = $("#f").serialize();
                                $.ajax({
                                    type: "POST",
                                    url: `/SinglePageApps/${controllerAction}`,
                                    data: data,
                                    success: r => {
                                        console.log(r);
                                        $("#toasthead").html("Success");
                                        $("#toastbody").html("Data inserted successfully");
                                        myModal.hide();
                                        bsAlert.show();
                                        if (dbAction == 'insert') addToTable(dbType, r);
                                        if (dbAction == "edit") {
                                        $("#toasthead").html("Success");
                                        $("#toastbody").html("Data saved successfully");
                                        myModal.hide();
                                        bsAlert.show();
                                        //console.log( `customer_tr_${r.customerID}`);
                                        replaceRow(dbType, `customer_tr_${r.customerID}`, r);

                                    }

                                    }
                                })
                            }
                        }
                        //add saledetails here
                        if (dbType == "saledetails") {
                        var isValid = $("#f").valid();
                        //console.log(isValid)
                        if (isValid == true) {
                            var dbType = $("#f").data("db-type");
                            var dbAction = $("#f").data("db-action");
                            var controllerAction = $("#f").data("controller-action");
                            
                            //console.log(`${dbType} ${dbAction} ${controllerAction}`);
                            var data = $("#f").serialize();
                            //console.log(data);
                            $.ajax({
                                type: "POST",
                                url: `/SinglePageApps/${controllerAction}`,
                                data: data,
                                success: r => {
                                    console.log(r);
                                    $("#toasthead").html("Success");
                                    $("#toastbody").html("Data inserted successfully");
                                    myModal.hide();
                                    bsAlert.show();
                                    if (dbAction == 'insert') addToTable(dbType, r);
                                    
                                }
                            });
                        }
                    }

                    }


                });
                //Save click end
            });
            //Add more Sales item start
            $(document).on("click", "button#addItemForm", () => {
                $.ajax({
                    type: 'GET',
                    url: '/SinglePageApps/CreateItem',
                    success: r => {

                        $("div#items").append(r);

                    }
                })
            });
            //Add more Sales item end
        });
        //Function replace row start
        function replaceRow(dbType, rowid, r) {
            //console.log(r);
            if (dbType == 'author') {
                $(`#${rowid}`).html(` <td>${r.authorName}</td>
                                            <td>${r.authorAddress}</td>
                                            <td>${getGender(r.gender)}</td>
                                            <td class="d-flex justify-content-sm-evenly">
                                            <button type="button" class="btn btn-primary btn-sm rounded-pill edit" data-db-type="author" data-db-action="edit" data-author-id="${r.authorID}" data-controller-action="EditAuthor"><i class="bi bi-pencil">Edit</i></button>
                                            <button type="button" class="btn btn-danger btn-sm rounded-pill del" data-db-type="author" data-db-action="delete" data-author-id="${r.authorID}" data-controller-action="DeleteAuthor"><i class="bi bi-trash">Delete</i></button>
                                        </td>`);
            }
            if (dbType == 'genre') {
                $(`#${rowid}`).html(` <td>${r.genreName}</td>
                                            <td class="d-flex justify-content-sm-evenly">
                                            <button type="button" class="btn btn-primary btn-sm rounded-pill edit" data-db-type="genre" data-db-action="edit" data-genre-id="${r.genreID}" data-controller-action="EditGenre"><i class="bi bi-pencil">Edit</i></button>
                                            <button type="button" class="btn btn-danger btn-sm rounded-pill del" data-db-type="genre" data-db-action="delete" data-genre-id="${r.genreID}" data-controller-action="DeleteGenre"><i class="bi bi-trash">Delete</i></button>
                                        </td>`);
            }
            if (dbType == 'publisher') {
                $(`#${rowid}`).html(` <td>${r.publisherName}</td>
                                            <td class="d-flex justify-content-sm-evenly">
                                            <button type="button" class="btn btn-primary btn-sm rounded-pill edit" data-db-type="publisher" data-db-action="edit" data-publisher-id="${r.publisherID}" data-controller-action="Editpublisher"><i class="bi bi-pencil">Edit</i></button>
                                            <button type="button" class="btn btn-danger btn-sm rounded-pill del" data-db-type="publisher" data-db-action="delete" data-publisher-id="${r.publisherID}" data-controller-action="Deletepublisher"><i class="bi bi-trash">Delete</i></button>
                                        </td>`);
            }
            if (dbType == 'book') {
                console.log($(`#${rowid}`));
                $(`#${rowid}`).html(`<td style="width:50px"><img src="/Pictures/${r.picture}" style="width:40px" class="img-thumbnail rounded-circle" /></td>
                                                            <td>${r.bookName}</td>
                                                            <td>${r.price.toFixed(2)}</td>
                                                            <td>${r.publishDate ? formatDate(new Date(r.publishDate)) : ''}</td>
                                                            <td>${r.genre.genreName}</td>
                                                            <td>${r.publisher.publisherName}</td>
                                                            <td>${r.available}</td>
                                                            <td class="d-flex justify-content-sm-evenly">
                                                                    <button type="button" class="btn btn-primary btn-sm rounded-pill edit" data-db-type="book" data-db-action="edit" data-book-id="${r.bookID}" data-controller-action="EditBook"><i class="bi bi-pencil">Edit</i></button>
                                                                    <button type="button" class="btn btn-danger btn-sm rounded-pill del" data-db-type="book" data-db-action="delete" data-book-id="${r.bookID}" data-controller-action="DeleteBook"><i class="bi bi-trash">Delete</i></button>
                                                            </td>`);
            }
            if(dbType == 'customer')
            {
                $(`#${rowid}`).html(`<td style="width:50px"><button type="button" class="btn btn-sm select" data-customer-id="${r.customerID}" >Select</button</td>
                                                                                                            <td>${r.customersName}</td>
                                                                                                            <td>${r.customerPhone}</td>
                                                                                                    <td class="d-flex justify-content-sm-evenly">
                                                                    <button type="button" class="btn btn-primary btn-sm rounded-pill edit" data-db-type="customer" data-db-action="edit" data-customer-id="${r.customerID}" data-controller-action="EditCustomer"><i class="bi bi-pencil">Edit</i></button>
                                                                    <button type="button" class="btn btn-danger btn-sm rounded-pill del" data-db-type="customer" data-db-action="delete" data-customer-id="${r.customerID}" data-controller-action="DeleteCustomer"><i class="bi bi-trash">Delete</i></button>
                                                            </td>`);
            }

        }
        //Function replace row start

        //Function form data builder start
        function createData(dbType, dbAction) {
            if (dbType == "author") {
                var obj = {
                    AuthorName: $("#AuthorName").val(),
                    AuthorAddress: $("#AuthorAddress").val(),
                    Gender: $("#Gender").val()
                };
                if (dbAction != 'insert') obj.AuthorID = $("#AuthorID").val();
                return obj;
            }
            if (dbType == "genre") {
                var obj = {
                    GenreName: $("#GenreName").val(),
                };
                if (dbAction != 'insert') obj.GenreID = $("#GenreID").val();
                return obj;
            }
            if (dbType == "publisher") {
                var obj = {
                    PublisherName: $("#PublisherName").val(),
                };
                if (dbAction != 'insert') obj.PublisherID = $("#PublisherID").val();
                return obj;
            }
            if (dbType == "book") {
                var formData = new FormData();
                if (dbAction != 'insert') formData.append("BookID", $("#BookID").val());
                formData.append("BookName", $("#BookName").val());
                formData.append("Price", $("#Price").val());
                formData.append("PublishDate", $("#PublishDate").val());
                formData.append("GenreID", $("#GenreID").val());
                formData.append("PublisherID", $("#PublisherID").val());
                formData.append("Available", document.getElementById("Available").checked);
                formData.append("Picture", document.getElementById("Picture").files[0]);
                return formData;
            };


        }
        //Function append to table start
        function addToTable(dbType, r) {
            console.log(r);
            console.log(dbType);
            if (dbType == "author") {
                $(`#${dbType}Table tbody`).append(
                    `<tr id="author_tr_${r.authorID}">
                                            <td>${r.authorName}</td>
                                            <td>${r.authorAddress}</td>
                                            <td>${getGender(r.gender)}</td>
                                            <td class="d-flex justify-content-sm-evenly">
                                            <button type="button" class="btn btn-primary btn-sm rounded-pill edit" data-db-type="author" data-db-action="edit" data-author-id="${r.authorID}" data-controller-action="EditAuthor"><i class="bi bi-pencil">Edit</i></button>
                                            <button type="button" class="btn btn-danger btn-sm rounded-pill del" data-db-type="author" data-db-action="delete" data-author-id="${r.authorID}" data-controller-action="DeleteAuthor"><i class="bi bi-trash">Delete</i></button>
                                        </td>
                                                                    </tr>`);
            }
            if (dbType == "genre") {
                $(`#${dbType}Table tbody`).append(
                    `<tr id="genre_tr_${r.genreID}">
                                            <td>${r.genreName}</td>
                                            <td class="d-flex justify-content-sm-evenly">
                                            <button type="button" class="btn btn-primary btn-sm rounded-pill edit" data-db-type="genre" data-db-action="edit" data-genre-id="${r.genreID}" data-controller-action="EditGenre"><i class="bi bi-pencil">Edit</i></button>
                                            <button type="button" class="btn btn-danger btn-sm rounded-pill del" data-db-type="genre" data-db-action="delete" data-genre-id="${r.genreID}" data-controller-action="DeleteGenre"><i class="bi bi-trash">Delete</i></button>
                                        </td>
                                                                    </tr>`);
            }
            if (dbType == "publisher") {
                $(`#${dbType}Table tbody`).append(
                    `<tr id="publisher_tr_${r.publisherID}">
                                            <td>${r.publisherName}</td>
                                            <td class="d-flex justify-content-sm-evenly">
                                            <button type="button" class="btn btn-primary btn-sm rounded-pill edit" data-db-type="publisher" data-db-action="edit" data-publisher-id="${r.publisherID}" data-controller-action="EditPublisher"><i class="bi bi-pencil">Edit</i></button>
                                            <button type="button" class="btn btn-danger btn-sm rounded-pill del" data-db-type="publisher" data-db-action="delete" data-publisher-id="${r.publisherID}" data-controller-action="DeletePublisher"><i class="bi bi-trash">Delete</i></button>
                                        </td>
                                                                    </tr>`);
            }
            if (dbType == "book") {
                $(`#${dbType}Table tbody`).append(
                    `<tr id="book_tr_${r.bookID}">
                                <td style="width:50px"><img src="/Pictures/${r.picture}" style="width:40px" class="img-thumbnail rounded-circle" /></td>
                                    <td>${r.bookName}</td>
                                    <td>${r.price}</td>
                                    <td>${r.publishDate ? formatDate(new Date(r.publishDate)) : ''}</td>
                                    <td>${r.genre.genreName}</td>
                                    <td>${r.publisher.publisherName}</td>
                                    <td>${r.available}</td>
                                    <td class="d-flex justify-content-sm-evenly">
                                                                    <button type="button" class="btn btn-primary btn-sm rounded-pill edit" data-db-type="book" data-db-action="edit" data-book-id="${r.bookID}" data-controller-action="EditBook"><i class="bi bi-pencil">Edit</i></button>
                                                                    <button type="button" class="btn btn-danger btn-sm rounded-pill del" data-db-type="book" data-db-action="delete" data-book-id="${r.bookID}" data-controller-action="DeleteBook"><i class="bi bi-trash">Delete</i></button>
                                                            </td>
                            </tr>`);
            }
            if (dbType == "customer") {
                $(`#${dbType}Table tbody`).append(
                    `<tr id="customer_tr_${r.customerID}">
                                                                                                            <td style="width:50px"><button type="button" class="btn btn-sm select" data-customer-id="${r.customerID}" >Select</button</td>
                                                                                                            <td>${r.customersName}</td>
                                                                                                            <td>${r.customerPhone}</td>
                                                                                                    <td class="d-flex justify-content-sm-evenly">
                                                                    <button type="button" class="btn btn-primary btn-sm rounded-pill edit" data-db-type="customer" data-db-action="edit" data-customer-id="${r.customerID}" data-controller-action="EditCustomer"><i class="bi bi-pencil">Edit</i></button>
                                                                    <button type="button" class="btn btn-danger btn-sm rounded-pill del" data-db-type="customer" data-db-action="delete" data-customer-id="${r.customerID}" data-controller-action="DeleteCustomer"><i class="bi bi-trash">Delete</i></button>
                                                            </td>
                                                                                            </tr>`);
            }
            if (dbType == "saledetails") {
                $(`#${dbType}Table tbody`).append(
                    `<tr id="saledetails_tr_${r.customerID}_${r.bookID}">
                                                                        <td><img src="/Pictures/${r.book.picture}" class="rounded-circle" style="width:40px" /></td>
                                                                <td>${r.customer.customersName}</td>
                                                                <td>${r.book.bookName}</td>
                                                                <td>${r.book.price}</td>
                                                                <td>${r.quantity}</td>
                                                                <td>
                                                                        <button type="button" class="btn btn-danger btn-sm rounded-pill del" data-db-type="saledetails" data-db-action="delete" data-customer-id="${r.customerID}" data-book-id="${r.bookID}" data-controller-action="DeleteSaleDetails"><i class="bi bi-trash">Delete</i></button>
                                                                </td>
                                                        </tr>`);

            }
        }

        //Function append to table end
        //FORMATE DATE
        function formatDate(d) {
            return [
                d.getFullYear(),
                (d.getMonth() + 1).toString().padStart(2, '0'),
                d.getDate().toString().padStart(2, '0')
            ].join('-');
        }
        //EnumFunction
        
        function getGender(gender) {
            //console.log(status);

            if (gender == '1') return 'Male';
            if (gender == '2') return 'Female';
            return '';

        }
    </script>
}

